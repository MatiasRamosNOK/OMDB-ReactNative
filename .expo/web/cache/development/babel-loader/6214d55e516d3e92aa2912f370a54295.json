{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_USER, SET_SUCCESFULL } from \"../constants\";\n\nvar register = function register(succesfull, error) {\n  return {\n    type: REGISTER_USER,\n    succesfull: succesfull,\n    error: error\n  };\n};\n\nvar setSuccesfull = function setSuccesfull() {\n  return {\n    type: SET_SUCCESFULL\n  };\n};\n\nexport var registerUser = function registerUser(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return function (dispatch) {\n    console.log(\"Entro al dispatch con\", email, password);\n    axios.post(\"https://omdb-reactnative.herokuapp.com/users/register\", {\n      email: email,\n      password: password\n    }).then(function (response) {\n      console.log(\"Entro al then\");\n\n      if (response.status == 200) {\n        console.log(\"Entro al if\");\n        dispatch(register(true, null));\n      } else if (response.status == 205) {\n        console.log(\"Entro al else if\");\n      }\n    }).catch(function (error) {\n      console.log(\"ENtro al error con \", error);\n      dispatch(register(false, \"EmailUsed\"));\n    });\n  };\n};\nexport var setSuccesfullNull = function setSuccesfullNull() {\n  return function (dispatch) {\n    dispatch(setSuccesfull());\n  };\n};","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/redux/actions/register.js"],"names":["axios","REGISTER_USER","SET_SUCCESFULL","register","succesfull","error","type","setSuccesfull","registerUser","email","password","dispatch","console","log","post","then","response","status","catch","setSuccesfullNull"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,cAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAUC,UAAV,EAAsBC,KAAtB,EAA6B;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAEL,aADD;AAELG,IAAAA,UAAU,EAAEA,UAFP;AAGLC,IAAAA,KAAK,EAAEA;AAHF,GAAP;AAKD,CAND;;AAQA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAY;AAChC,SAAO;AACLD,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJD;;AAMA,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,OAA+B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACzD,SAAO,UAAUC,QAAV,EAAoB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,KAArC,EAA4CC,QAA5C;AACAV,IAAAA,KAAK,CACFc,IADH,CACQ,uDADR,EACiE;AAC7DL,MAAAA,KAAK,EAAEA,KADsD;AAE7DC,MAAAA,QAAQ,EAAEA;AAFmD,KADjE,EAKGK,IALH,CAKQ,UAAUC,QAAV,EAAoB;AACxBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,UAAIG,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1BL,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAF,QAAAA,QAAQ,CAACR,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAT,CAAR;AACD,OAHD,MAGO,IAAIa,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACjCL,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;AACF,KAbH,EAcGK,KAdH,CAcS,UAAUb,KAAV,EAAiB;AACtBO,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCR,KAAnC;AACAM,MAAAA,QAAQ,CAACR,QAAQ,CAAC,KAAD,EAAQ,WAAR,CAAT,CAAR;AACD,KAjBH;AAkBD,GApBD;AAqBD,CAtBM;AAwBP,OAAO,IAAMgB,iBAAiB,GAAG,SAApBA,iBAAoB,GAAY;AAC3C,SAAO,UAAUR,QAAV,EAAoB;AACzBA,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\nimport { REGISTER_USER, SET_SUCCESFULL } from \"../constants\";\n\nconst register = function (succesfull, error) {\n  return {\n    type: REGISTER_USER,\n    succesfull: succesfull,\n    error: error,\n  };\n};\n\nconst setSuccesfull = function () {\n  return {\n    type: SET_SUCCESFULL,\n  };\n};\n\nexport const registerUser = function ({ email, password }) {\n  return function (dispatch) {\n    console.log(\"Entro al dispatch con\", email, password);\n    axios\n      .post(\"https://omdb-reactnative.herokuapp.com/users/register\", {\n        email: email,\n        password: password,\n      })\n      .then(function (response) {\n        console.log(\"Entro al then\");\n        if (response.status == 200) {\n          console.log(\"Entro al if\");\n          dispatch(register(true, null));\n        } else if (response.status == 205) {\n          console.log(\"Entro al else if\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"ENtro al error con \", error);\n        dispatch(register(false, \"EmailUsed\"));\n      });\n  };\n};\n\nexport const setSuccesfullNull = function () {\n  return function (dispatch) {\n    dispatch(setSuccesfull());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}