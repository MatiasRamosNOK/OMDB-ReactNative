{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { REGISTER_USER, SET_SUCCESFULL } from \"../constants\";\nvar inicialState = {\n  fail: false,\n  succesfull: false,\n  error: \"\"\n};\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inicialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_SUCCESFULL:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          succesfull: false\n        });\n      }\n\n    case REGISTER_USER:\n      console.log(\"Entro al reducer con:\", action);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        succesfull: action.succesfull,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/redux/reducers/register-reducer.js"],"names":["REGISTER_USER","SET_SUCCESFULL","inicialState","fail","succesfull","error","reducer","state","action","type","console","log"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,cAAxB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,cAAL;AAAqB;AACnB,+CAAYM,KAAZ;AAAmBH,UAAAA,UAAU,EAAE;AAA/B;AACD;;AACD,SAAKJ,aAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,MAArC;AACA,6CAAYD,KAAZ;AAAmBH,QAAAA,UAAU,EAAEI,MAAM,CAACJ,UAAtC;AAAkDC,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAAhE;;AACF;AACE,aAAOE,KAAP;AARJ;AAUD","sourcesContent":["import { REGISTER_USER, SET_SUCCESFULL } from \"../constants\";\n\nconst inicialState = {\n  fail: false,\n  succesfull: false,\n  error: \"\",\n};\n\nexport default function reducer(state = inicialState, action) {\n  switch (action.type) {\n    case SET_SUCCESFULL: {\n      return { ...state, succesfull: false };\n    }\n    case REGISTER_USER:\n      console.log(\"Entro al reducer con:\", action);\n      return { ...state, succesfull: action.succesfull, error: action.error };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}