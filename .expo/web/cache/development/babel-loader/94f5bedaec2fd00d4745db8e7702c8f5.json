{"ast":null,"code":"var _jsxFileName = \"/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/components/Single.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Spinner, Button } from \"native-base\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { fetchMovie, resetMovie } from \"../redux/actions/movies\";\nimport { addFavorite } from \"../redux/actions/login\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar windowHeight = Dimensions.get(\"window\").height;\nvar windowWidth = Dimensions.get(\"window\").width;\nexport default function Single() {\n  var IDmovie = useSelector(function (store) {\n    return store.movies.id;\n  });\n  var movie = useSelector(function (store) {\n    return store.movies.movie;\n  });\n  var loginStatus = useSelector(function (store) {\n    return store.login.succesfull;\n  });\n  var dataUser = useSelector(function (store) {\n    return store.login.data;\n  });\n  console.log(\"Data user:\", dataUser);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(fetchMovie(IDmovie));\n  }, [movie.length, IDmovie]);\n  return React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, movie.imdbID == IDmovie && movie && Object.keys(movie).length ? React.createElement(View, {\n    style: styles.rootContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: movie.Poster\n    },\n    style: {\n      width: windowWidth * 0.7,\n      height: windowHeight * 0.75,\n      marginBottom: 15\n    },\n    PlaceholderContent: React.createElement(ActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }), loginStatus && Object.keys(dataUser).includes(\"moviesID\") && !dataUser.moviesID.includes(movie.imdbID) ? React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    info: true,\n    large: true,\n    onPress: function onPress() {\n      dispatch(addFavorite(dataUser.id, movie.imdbID));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \" Add to favorite \"))) : null, dataUser.moviesID.includes(movie.imdbID) ? React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    large: true,\n    success: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Success\"))) : null, Object.keys(movie).map(function (key, index) {\n    if (key != \"Poster\" && key != \"Ratings\" && key != \"Response\") {\n      return React.createElement(View, {\n        style: styles.contenedorInfo,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.infoTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      }, key.toString()), React.createElement(Text, {\n        style: styles.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }\n      }, movie[key].toString()));\n    }\n  })) : React.createElement(View, {\n    style: styles.waitingContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(Spinner, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  root: {\n    height: \"100%\",\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonFavorite: {\n    height: 10\n  },\n  buttonContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    flex: 1\n  },\n  rootContainer: {\n    height: \"100%\",\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 15\n  },\n  infoText: {\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\"\n  },\n  info: {\n    color: \"white\",\n    marginBottom: 10\n  },\n  infoTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  contenedorInfo: {\n    marginLeft: 5,\n    marginRight: 5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  waitingContainer: {\n    height: windowHeight,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textButton: {\n    color: \"white\"\n  },\n  textButtonDone: {\n    fontSize: 20,\n    color: \"white\"\n  },\n  buttonDone: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/components/Single.js"],"names":["React","useEffect","useDispatch","useSelector","Spinner","Button","fetchMovie","resetMovie","addFavorite","windowHeight","Dimensions","get","height","windowWidth","width","Single","IDmovie","store","movies","id","movie","loginStatus","login","succesfull","dataUser","data","console","log","dispatch","length","styles","root","imdbID","Object","keys","rootContainer","uri","Poster","marginBottom","includes","moviesID","buttonContainer","textButton","map","key","index","contenedorInfo","infoTitle","toString","info","waitingContainer","StyleSheet","create","backgroundColor","justifyContent","alignItems","buttonFavorite","flex","marginTop","infoText","color","fontSize","fontWeight","marginLeft","marginRight","display","textButtonDone","buttonDone"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Spinner, Button } from \"native-base\";\n\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ScrollView,\n  SafeAreaView,\n  Image,\n} from \"react-native\";\nimport { fetchMovie, resetMovie } from \"../redux/actions/movies\";\nimport { addFavorite } from \"../redux/actions/login\";\nimport { ActivityIndicator, Keyboard, Dimensions } from \"react-native\";\nconst windowHeight = Dimensions.get(\"window\").height;\nconst windowWidth = Dimensions.get(\"window\").width;\nexport default function Single() {\n  const IDmovie = useSelector((store) => store.movies.id);\n  const movie = useSelector((store) => store.movies.movie);\n  const loginStatus = useSelector((store) => store.login.succesfull);\n  const dataUser = useSelector((store) => store.login.data);\n  console.log(\"Data user:\", dataUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchMovie(IDmovie));\n  }, [movie.length, IDmovie]);\n  return (\n    <SafeAreaView>\n      <ScrollView>\n        <View style={styles.root}>\n          {movie.imdbID == IDmovie && movie && Object.keys(movie).length ? (\n            <View style={styles.rootContainer}>\n              <Image\n                source={{ uri: movie.Poster }}\n                style={{\n                  width: windowWidth * 0.7,\n                  height: windowHeight * 0.75,\n                  marginBottom: 15,\n                }}\n                PlaceholderContent={<ActivityIndicator />}\n              />\n\n              {loginStatus &&\n              Object.keys(dataUser).includes(\"moviesID\") &&\n              !dataUser.moviesID.includes(movie.imdbID) ? (\n                <View style={styles.buttonContainer}>\n                  <Button\n                    info\n                    large\n                    onPress={() => {\n                      dispatch(addFavorite(dataUser.id, movie.imdbID));\n                    }}\n                  >\n                    <Text style={styles.textButton}> Add to favorite </Text>\n                  </Button>\n                </View>\n              ) : null}\n\n              {dataUser.moviesID.includes(movie.imdbID) ? (\n                <View style={styles.buttonContainer}>\n                  <Button large success>\n                    <Text style={styles.textButton}>Success</Text>\n                  </Button>\n                </View>\n              ) : null}\n\n              {Object.keys(movie).map(function (key, index) {\n                if (key != \"Poster\" && key != \"Ratings\" && key != \"Response\") {\n                  return (\n                    <View style={styles.contenedorInfo} key={index}>\n                      <Text style={styles.infoTitle}>{key.toString()}</Text>\n                      <Text style={styles.info}>{movie[key].toString()}</Text>\n                    </View>\n                  );\n                }\n              })}\n            </View>\n          ) : (\n            <View style={styles.waitingContainer}>\n              <Spinner color=\"blue\" />\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    height: \"100%\",\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  buttonFavorite: {\n    height: 10,\n  },\n  buttonContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    flex: 1,\n  },\n  rootContainer: {\n    height: \"100%\",\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 15,\n  },\n  infoText: {\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n  },\n  info: {\n    color: \"white\",\n    marginBottom: 10,\n  },\n  infoTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n  contenedorInfo: {\n    marginLeft: 5,\n    marginRight: 5,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  waitingContainer: {\n    height: windowHeight,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  textButton: {\n    color: \"white\",\n  },\n  textButtonDone: {\n    fontSize: 20,\n    color: \"white\",\n  },\n  buttonDone: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}