{"ast":null,"code":"var _jsxFileName = \"/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/App.js\";\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport storeConfiguration from \"./redux/store\";\nimport Main from \"./components/Main\";\nimport Single from \"./components/Single\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport User from \"./components/User\";\nimport Movies from \"./components/Movies\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Icon } from \"native-base\";\nimport { enableScreens } from \"react-native-screens\";\nimport { logoutUser } from \"./redux/actions/login\";\nenableScreens();\nvar store = storeConfiguration();\nvar Stack = createStackNavigator();\nexport default function App() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Main,\n    options: function options(_ref) {\n      var navigation = _ref.navigation,\n          route = _ref.route;\n      return {\n        headerRight: function headerRight(props) {\n          return React.createElement(Icon, {\n            name: \"person\",\n            style: {\n              marginRight: 10\n            },\n            onPress: function onPress(e) {\n              if (store.getState().login.succesfull) {\n                navigation.navigate(\"User\");\n              } else {\n                navigation.navigate(\"Login\");\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }\n          });\n        }\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Single\",\n    component: Single,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      return {\n        title: route.params.title\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"User\",\n    component: User,\n    options: function options(_ref3) {\n      var navigation = _ref3.navigation,\n          route = _ref3.route;\n      return {\n        headerRight: function headerRight(props) {\n          return React.createElement(Icon, {\n            name: \"exit\",\n            style: {\n              marginRight: 10\n            },\n            onPress: function onPress(e) {\n              store.dispatch(logoutUser());\n              navigation.goBack();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }\n          });\n        }\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Movies\",\n    component: Movies,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/App.js"],"names":["React","Provider","useDispatch","storeConfiguration","Main","Single","Login","Register","User","Movies","NavigationContainer","createStackNavigator","Icon","enableScreens","logoutUser","store","Stack","App","navigation","route","headerRight","props","marginRight","e","getState","login","succesfull","navigate","title","params","dispatch","goBack"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport storeConfiguration from \"./redux/store\";\nimport Main from \"./components/Main\";\nimport Single from \"./components/Single\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport User from \"./components/User\";\nimport Movies from \"./components/Movies\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Icon } from \"native-base\";\nimport { enableScreens } from \"react-native-screens\";\nimport { logoutUser } from \"./redux/actions/login\";\nenableScreens();\nlet store = storeConfiguration();\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Stack.Navigator initialRouteName=\"Home\">\n          <Stack.Screen\n            name=\"Home\"\n            component={Main}\n            options={({ navigation, route }) => ({\n              headerRight: (props) => {\n                return (\n                  <Icon\n                    name=\"person\"\n                    style={{ marginRight: 10 }}\n                    onPress={(e) => {\n                      if (store.getState().login.succesfull) {\n                        navigation.navigate(\"User\");\n                      } else {\n                        navigation.navigate(\"Login\");\n                      }\n                    }}\n                  />\n                );\n              },\n            })}\n          />\n          <Stack.Screen\n            name=\"Single\"\n            component={Single}\n            options={({ route }) => ({ title: route.params.title })}\n          />\n          <Stack.Screen name=\"Login\" component={Login} />\n          <Stack.Screen name=\"Register\" component={Register} />\n          <Stack.Screen\n            name=\"User\"\n            component={User}\n            options={({ navigation, route }) => ({\n              headerRight: (props) => {\n                return (\n                  <Icon\n                    name=\"exit\"\n                    style={{ marginRight: 10 }}\n                    onPress={(e) => {\n                      store.dispatch(logoutUser());\n                      navigation.goBack();\n                    }}\n                  />\n                );\n              },\n            })}\n          />\n          <Stack.Screen name=\"Movies\" component={Movies} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}