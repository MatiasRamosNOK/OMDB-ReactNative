{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_MOVIES, ADD_MOVIE, SET_ID_MOVIE, RESET_MOVIE, SET_MOVIES_USER } from \"../constants\";\n\nvar reset = function reset() {\n  return {\n    type: RESET_MOVIE\n  };\n};\n\nvar setMoviesUser = function setMoviesUser(movies) {\n  return {\n    type: SET_MOVIES_USER,\n    movies: movies\n  };\n};\n\nvar setID = function setID(id) {\n  return {\n    type: SET_ID_MOVIE,\n    id: id\n  };\n};\n\nvar receiveMovie = function receiveMovie(movie) {\n  return {\n    type: ADD_MOVIE,\n    movie: movie\n  };\n};\n\nvar receiveMovies = function receiveMovies(movies) {\n  return {\n    type: ADD_MOVIES,\n    movies: movies\n  };\n};\n\nexport var getMovies = function getMovies(moviesIDS) {\n  return function (dispatch) {\n    var arrayPromesas = [];\n\n    for (var i = 0; i < moviesIDS.length; i++) {\n      arrayPromesas.push(axios.get(\"https://www.omdbapi.com/?apikey=20dac387&i=\" + moviesIDS[i]).then(function (resp) {\n        return resp.data;\n      }));\n    }\n\n    Promise.all(arrayPromesas).then(function (data) {\n      dispatch(setMoviesUser(data));\n    });\n  };\n};\nexport var fetchMovies = function fetchMovies(name) {\n  return function (dispatch, getState) {\n    axios.get(\"https://www.omdbapi.com/?apikey=20dac387&s=\" + name).then(function (res) {\n      dispatch(receiveMovies(res.data));\n    });\n  };\n};\nexport var fetchMovie = function fetchMovie(id) {\n  return function (dispatch) {\n    axios.get(\"https://www.omdbapi.com/?apikey=20dac387&i=\" + id).then(function (res) {\n      dispatch(receiveMovie(res.data));\n    });\n  };\n};\nexport var setIDMovie = function setIDMovie(id) {\n  return function (dispatch) {\n    dispatch(setID(id));\n  };\n};\nexport var resetMovie = function resetMovie() {\n  return function (dispatch) {\n    dispatch(reset());\n  };\n};","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/redux/actions/movies.js"],"names":["axios","ADD_MOVIES","ADD_MOVIE","SET_ID_MOVIE","RESET_MOVIE","SET_MOVIES_USER","reset","type","setMoviesUser","movies","setID","id","receiveMovie","movie","receiveMovies","getMovies","moviesIDS","dispatch","arrayPromesas","i","length","push","get","then","resp","data","Promise","all","fetchMovies","name","getState","res","fetchMovie","setIDMovie","resetMovie"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ADD_MOVIES,\n  ADD_MOVIE,\n  SET_ID_MOVIE,\n  RESET_MOVIE,\n  SET_MOVIES_USER,\n} from \"../constants\";\n\nconst reset = function () {\n  return {\n    type: RESET_MOVIE,\n  };\n};\n\nconst setMoviesUser = function (movies) {\n  return {\n    type: SET_MOVIES_USER,\n    movies: movies,\n  };\n};\nconst setID = function (id) {\n  return {\n    type: SET_ID_MOVIE,\n    id: id,\n  };\n};\n\nconst receiveMovie = function (movie) {\n  return {\n    type: ADD_MOVIE,\n    movie: movie,\n  };\n};\n\nconst receiveMovies = function (movies) {\n  return {\n    type: ADD_MOVIES,\n    movies: movies,\n  };\n};\n\nexport const getMovies = function (moviesIDS) {\n  return function (dispatch) {\n    let arrayPromesas = [];\n    for (var i = 0; i < moviesIDS.length; i++) {\n      arrayPromesas.push(\n        axios\n          .get(`https://www.omdbapi.com/?apikey=20dac387&i=${moviesIDS[i]}`)\n          .then((resp) => {\n            return resp.data;\n          })\n      );\n    }\n    Promise.all(arrayPromesas).then((data) => {\n      dispatch(setMoviesUser(data));\n    });\n  };\n};\nexport const fetchMovies = function (name) {\n  return function (dispatch, getState) {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=20dac387&s=${name}`)\n      .then((res) => {\n        dispatch(receiveMovies(res.data));\n      });\n  };\n};\n\nexport const fetchMovie = function (id) {\n  return function (dispatch) {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=20dac387&i=${id}`)\n      .then((res) => {\n        dispatch(receiveMovie(res.data));\n      });\n  };\n};\n\nexport const setIDMovie = function (id) {\n  return function (dispatch) {\n    dispatch(setID(id));\n  };\n};\n\nexport const resetMovie = function () {\n  return function (dispatch) {\n    dispatch(reset());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}