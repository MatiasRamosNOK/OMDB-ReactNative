{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/components/Main.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Image, Icon } from \"react-native-elements\";\nimport { Input } from \"react-native-elements\";\nimport { fetchMovies, setIDMovie } from \"../redux/actions/movies\";\nvar windowHeight = Dimensions.get(\"window\").height;\nvar windowWidth = Dimensions.get(\"window\").width;\nexport default function Main(_ref) {\n  var navigation = _ref.navigation;\n  var movies = useSelector(function (store) {\n    return store.movies;\n  });\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var dispatch = useDispatch();\n\n  var lookInfo = function lookInfo() {\n    if (name != \"\") {\n      dispatch(fetchMovies(name));\n      Keyboard.dismiss();\n    }\n  };\n\n  var goToSingle = function goToSingle(elem) {\n    dispatch(setIDMovie(elem.imdbID));\n    navigation.navigate(\"Single\", {\n      title: elem.Title\n    });\n  };\n\n  useEffect(function () {}, [movies.movies.Search]);\n  return React.createElement(SafeAreaView, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    onSubmitEditing: function onSubmitEditing() {\n      if (name != \"\") {\n        dispatch(fetchMovies(name));\n      }\n    },\n    placeholderTextColor: \"gray\",\n    placeholder: \"Movie\",\n    onChange: function onChange(e) {\n      setName(e.nativeEvent.text);\n    },\n    inputStyle: styles.input,\n    rightIcon: React.createElement(Icon, {\n      name: \"search\",\n      size: 30,\n      onPress: lookInfo,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    contentContainerStyle: styles.containerImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, movies.movies.Search && movies.movies.Search.map(function (elem) {\n    return React.createElement(TouchableOpacity, {\n      key: elem.imdbID,\n      activeOpacity: 1,\n      onPress: function onPress() {\n        return goToSingle(elem);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: elem.Poster\n      },\n      style: {\n        width: windowWidth * 0.7,\n        height: windowHeight * 0.7,\n        marginBottom: 50\n      },\n      PlaceholderContent: React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 39\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }));\n  }), movies.movies.Response == \"False\" ? React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Hey we didn't found anything\") : null));\n}\nvar styles = StyleSheet.create({\n  root: {\n    height: \"100%\",\n    backgroundColor: \"black\"\n  },\n  error: {\n    color: \"white\",\n    fontSize: 25\n  },\n  container: {\n    flex: 1\n  },\n  image: {\n    marginTop: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inputUser: {\n    marginTop: 15,\n    justifyContent: \"space-between\",\n    color: \"white\"\n  },\n  input: {\n    color: \"white\"\n  },\n  icon: {\n    color: \"white\"\n  },\n  containerImages: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/components/Main.js"],"names":["React","useEffect","useDispatch","useSelector","Image","Icon","Input","fetchMovies","setIDMovie","windowHeight","Dimensions","get","height","windowWidth","width","Main","navigation","movies","store","useState","name","setName","dispatch","lookInfo","Keyboard","dismiss","goToSingle","elem","imdbID","navigate","title","Title","Search","styles","root","inputUser","e","nativeEvent","text","input","containerImages","map","uri","Poster","marginBottom","Response","error","StyleSheet","create","backgroundColor","color","fontSize","container","flex","image","marginTop","justifyContent","alignItems","icon"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\nimport { ActivityIndicator, Keyboard } from \"react-native\";\nimport { Image, Icon } from \"react-native-elements\";\nimport { Input } from \"react-native-elements\";\nimport { fetchMovies, setIDMovie } from \"../redux/actions/movies\";\nconst windowHeight = Dimensions.get(\"window\").height;\nconst windowWidth = Dimensions.get(\"window\").width;\nexport default function Main({ navigation }) {\n  const movies = useSelector((store) => store.movies);\n  const [name, setName] = React.useState(\"\");\n\n  const dispatch = useDispatch();\n  const lookInfo = () => {\n    if (name != \"\") {\n      dispatch(fetchMovies(name));\n      Keyboard.dismiss();\n    }\n  };\n\n  const goToSingle = (elem) => {\n    dispatch(setIDMovie(elem.imdbID));\n    navigation.navigate(\"Single\", { title: elem.Title });\n  };\n\n  useEffect(() => {}, [movies.movies.Search]);\n\n  return (\n    <SafeAreaView style={styles.root}>\n      <View style={styles.inputUser}>\n        <Input\n          onSubmitEditing={() => {\n            if (name != \"\") {\n              dispatch(fetchMovies(name));\n            }\n          }}\n          placeholderTextColor={\"gray\"}\n          placeholder=\"Movie\"\n          onChange={(e) => {\n            setName(e.nativeEvent.text);\n          }}\n          inputStyle={styles.input}\n          rightIcon={\n            <Icon name=\"search\" size={30} onPress={lookInfo} color={\"white\"} />\n          }\n        />\n      </View>\n\n      <ScrollView contentContainerStyle={styles.containerImages}>\n        {movies.movies.Search &&\n          movies.movies.Search.map((elem) => {\n            return (\n              <TouchableOpacity\n                key={elem.imdbID}\n                activeOpacity={1}\n                onPress={() => goToSingle(elem)}\n              >\n                <Image\n                  source={{ uri: elem.Poster }}\n                  style={{\n                    width: windowWidth * 0.7,\n                    height: windowHeight * 0.7,\n                    marginBottom: 50,\n                  }}\n                  PlaceholderContent={<ActivityIndicator />}\n                />\n              </TouchableOpacity>\n            );\n          })}\n        {movies.movies.Response == \"False\" ? (\n          <Text style={styles.error}>Hey we didn't found anything</Text>\n        ) : null}\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    height: \"100%\",\n    backgroundColor: \"black\",\n  },\n  error: {\n    color: \"white\",\n    fontSize: 25,\n  },\n  container: {\n    flex: 1,\n  },\n  image: {\n    marginTop: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  inputUser: {\n    marginTop: 15,\n    justifyContent: \"space-between\",\n    color: \"white\",\n  },\n  input: {\n    color: \"white\",\n  },\n  icon: {\n    color: \"white\",\n  },\n  containerImages: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}