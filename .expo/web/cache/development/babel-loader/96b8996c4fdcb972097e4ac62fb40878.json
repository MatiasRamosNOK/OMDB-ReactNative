{"ast":null,"code":"var _jsxFileName = \"/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/components/Movies.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Footer, FooterTab, Icon, Container, Content } from \"native-base\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getMovies } from \"../redux/actions/movies\";\nimport { deleteFavorite } from \"../redux/actions/login\";\nimport GestureRecognizer, { swipeDirections } from \"react-native-swipe-gestures\";\nvar windowHeight = Dimensions.get(\"window\").height;\nvar windowWidth = Dimensions.get(\"window\").width;\nexport default function Movies(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var data = useSelector(function (store) {\n    return store.login.data;\n  });\n  var movies = useSelector(function (store) {\n    return store.movies.moviesUser;\n  });\n  useEffect(function () {\n    dispatch(getMovies(Array.from(new Set(data.moviesID))));\n  }, [movies.length, data.moviesID.length]);\n  var config = {\n    velocityThreshold: 0.3,\n    directionalOffsetThreshold: 80\n  };\n\n  function _onSwipe(gestureName, gestureState) {\n    var SWIPE_UP = swipeDirections.SWIPE_UP,\n        SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n        SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n        SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n\n    switch (gestureName) {\n      case SWIPE_UP:\n        console.log(\"SWipe up\");\n        break;\n\n      case SWIPE_DOWN:\n        console.log(\"SWipe down\");\n        break;\n\n      case SWIPE_LEFT:\n        break;\n\n      case SWIPE_RIGHT:\n        navigation.navigate(\"User\");\n        break;\n    }\n  }\n\n  return React.createElement(GestureRecognizer, {\n    onSwipe: function onSwipe(direction, state) {\n      _onSwipe(direction, state);\n    },\n    config: config,\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Content, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, movies.length == 0 ? React.createElement(View, {\n    style: styles.empty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"Empty: Add something first\")) : null, movies && movies.map(function (movie, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      activeOpacity: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: \"\" + movie.Poster\n      },\n      style: {\n        width: windowWidth * 0.7,\n        height: windowHeight * 0.7,\n        resizeMode: \"contain\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }), React.createElement(Button, {\n      block: true,\n      danger: true,\n      style: {\n        marginBottom: 30\n      },\n      onPress: function onPress() {\n        dispatch(deleteFavorite(data.id, movie.imdbID));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: styles.textDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Delete\")));\n  })))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(FooterTab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    vertical: true,\n    onPress: function onPress() {\n      navigation.navigate(\"User\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"person\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Profile\")), React.createElement(Button, {\n    vertical: true,\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    active: true,\n    name: \"easel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Movies\"))))));\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    marginTop: 20\n  },\n  container: {\n    backgroundColor: \"black\"\n  },\n  title: {\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: 20,\n    color: \"white\"\n  },\n  button: {\n    marginBottom: 30\n  },\n  textDelete: {\n    color: \"white\",\n    fontSize: 20\n  },\n  text: {\n    color: \"white\"\n  },\n  empty: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/components/Movies.js"],"names":["React","Button","Footer","FooterTab","Icon","Container","Content","useDispatch","useSelector","useEffect","getMovies","deleteFavorite","GestureRecognizer","swipeDirections","windowHeight","Dimensions","get","height","windowWidth","width","Movies","navigation","dispatch","data","store","login","movies","moviesUser","Array","from","Set","moviesID","length","config","velocityThreshold","directionalOffsetThreshold","onSwipe","gestureName","gestureState","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","console","log","navigate","direction","state","flex","styles","container","root","empty","textDelete","map","movie","index","uri","Poster","resizeMode","marginBottom","id","imdbID","text","StyleSheet","create","justifyContent","alignItems","backgroundColor","marginTop","title","fontSize","color","button"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  ScrollView,\n  TouchableOpacity,\n  Image,\n  Text,\n  StyleSheet,\n  Dimensions,\n} from \"react-native\";\nimport {\n  Button,\n  Footer,\n  FooterTab,\n  Icon,\n  Container,\n  Content,\n} from \"native-base\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getMovies } from \"../redux/actions/movies\";\nimport { deleteFavorite } from \"../redux/actions/login\";\nimport GestureRecognizer, {\n  swipeDirections,\n} from \"react-native-swipe-gestures\";\nconst windowHeight = Dimensions.get(\"window\").height;\nconst windowWidth = Dimensions.get(\"window\").width;\nexport default function Movies({ navigation }) {\n  const dispatch = useDispatch();\n  const data = useSelector((store) => store.login.data);\n  const movies = useSelector((store) => store.movies.moviesUser);\n  useEffect(() => {\n    dispatch(getMovies(Array.from(new Set(data.moviesID))));\n  }, [movies.length, data.moviesID.length]);\n\n  const config = {\n    velocityThreshold: 0.3,\n    directionalOffsetThreshold: 80,\n  };\n\n  function onSwipe(gestureName, gestureState) {\n    const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n    switch (gestureName) {\n      case SWIPE_UP:\n        console.log(\"SWipe up\");\n\n        break;\n      case SWIPE_DOWN:\n        console.log(\"SWipe down\");\n\n        break;\n      case SWIPE_LEFT:\n        break;\n      case SWIPE_RIGHT:\n        navigation.navigate(\"User\");\n        break;\n    }\n  }\n  return (\n    <GestureRecognizer\n      onSwipe={(direction, state) => {\n        onSwipe(direction, state);\n      }}\n      config={config}\n      style={{\n        flex: 1,\n      }}\n    >\n      <Container>\n        <Content style={styles.container}>\n          <ScrollView>\n            <View style={styles.root}>\n              {movies.length == 0 ? (\n                <View style={styles.empty}>\n                  <Text style={styles.textDelete}>\n                    Empty: Add something first\n                  </Text>\n                </View>\n              ) : null}\n              {movies &&\n                movies.map((movie, index) => {\n                  return (\n                    <TouchableOpacity key={index} activeOpacity={1}>\n                      <Image\n                        source={{ uri: `${movie.Poster}` }}\n                        style={{\n                          width: windowWidth * 0.7,\n                          height: windowHeight * 0.7,\n                          resizeMode: \"contain\",\n                        }}\n                      />\n                      <Button\n                        block\n                        danger\n                        style={{ marginBottom: 30 }}\n                        onPress={() => {\n                          dispatch(deleteFavorite(data.id, movie.imdbID));\n                        }}\n                      >\n                        <Text style={styles.textDelete}>Delete</Text>\n                      </Button>\n                    </TouchableOpacity>\n                  );\n                })}\n            </View>\n          </ScrollView>\n        </Content>\n        <Footer>\n          <FooterTab>\n            <Button\n              vertical\n              onPress={() => {\n                navigation.navigate(\"User\");\n              }}\n            >\n              <Icon name=\"person\" />\n              <Text style={styles.text}>Profile</Text>\n            </Button>\n            <Button vertical active>\n              <Icon active name=\"easel\" />\n              <Text style={styles.text}>Movies</Text>\n            </Button>\n          </FooterTab>\n        </Footer>\n      </Container>\n    </GestureRecognizer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n    marginTop: 20,\n  },\n  container: {\n    backgroundColor: \"black\",\n  },\n  title: {\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: 20,\n    color: \"white\",\n  },\n  button: {\n    marginBottom: 30,\n  },\n  textDelete: {\n    color: \"white\",\n    fontSize: 20,\n  },\n  text: {\n    color: \"white\",\n  },\n  empty: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}