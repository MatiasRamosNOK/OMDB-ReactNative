{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/components/Register.js\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button } from \"react-native-elements\";\nimport { Input } from \"react-native-elements\";\nimport { Spinner } from \"native-base\";\nimport { registerUser } from \"../redux/actions/register\";\nvar windowHeight = Dimensions.get(\"window\").height;\nvar windowWidth = Dimensions.get(\"window\").width;\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  var failRegistration = useSelector(function (store) {\n    return store.register.error;\n  });\n  var succesfulRegister = useSelector(function (store) {\n    return store.register.succesfull;\n  });\n  console.log(\"Fail\", failRegistration, \" Success:\", succesfulRegister);\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      waiting = _React$useState6[0],\n      setWaiting = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      errorEmail = _React$useState8[0],\n      setErrorEmail = _React$useState8[1];\n\n  var dispatch = useDispatch();\n\n  var twoButtonsAlert = function twoButtonsAlert() {\n    Alert.alert(\"Something is wrong!\", \"Email and password field should be complete!\", [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  var emailAlert = function emailAlert() {\n    Alert.alert(\"Something is wrong!\", \"Email field should be complete!\", [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  var passwordAlert = function passwordAlert() {\n    Alert.alert(\"Something is wrong!\", \"Password field should be complete!\", [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  var checkData = function checkData() {\n    console.log(\"Entro a checkData\");\n\n    if (email == \"\" && password == \"\") {\n      return twoButtonsAlert();\n    } else if (email == \"\") {\n      return emailAlert();\n    } else if (password == \"\") {\n      return passwordAlert();\n    } else if (!email.includes(\"@\") || !email.slice(email.indexOf(\"@\"), email.length).includes(\".\")) {\n      setErrorEmail(\"Email is not valid\");\n    } else {\n      setErrorEmail(\"\");\n      setWaiting(true);\n      dispatch(registerUser({\n        email: email.toLocaleLowerCase(),\n        password: password\n      }));\n    }\n  };\n\n  useEffect(function () {\n    if (failRegistration == \"EmailUsed\") {\n      setWaiting(false);\n      setErrorEmail(\"Email already in use\");\n    }\n\n    if (succesfulRegister) {\n      console.log(\"Entro al if afuera del useEffect2\");\n      setWaiting(false);\n      navigation.navigate(\"Login\");\n    }\n  }, [succesfulRegister, failRegistration]);\n  return React.createElement(View, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, waiting ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(Spinner, {\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Email\"), React.createElement(Input, {\n    placeholderTextColor: \"gray\",\n    placeholder: \"abc@example.com\",\n    leftIcon: {\n      type: \"font-awesome\",\n      name: \"envelope\",\n      color: \"white\"\n    },\n    style: styles,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    inputStyle: styles.textInput,\n    errorMessage: errorEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Password\"), React.createElement(Input, {\n    placeholderTextColor: \"gray\",\n    placeholder: \"Som3th1n!gS3c-re\",\n    leftIcon: {\n      marginLeft: 6,\n      type: \"font-awesome\",\n      name: \"lock\",\n      color: \"white\",\n      marginRight: 4\n    },\n    inputStyle: styles.textInput,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.contenedorBotones,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"Register\",\n    buttonStyle: styles.button,\n    onPress: function onPress() {\n      checkData();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"black\"\n  },\n  contenedorBotones: {\n    marginTop: 10,\n    width: windowWidth * 0.9,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  button: {\n    marginLeft: 5,\n    marginRight: 5,\n    width: 100,\n    height: 40\n  },\n  email: {\n    width: windowWidth * 0.9,\n    marginBottom: 10\n  },\n  password: {\n    width: windowWidth * 0.9,\n    marginBottom: 10\n  },\n  textEmail: {\n    marginLeft: 10,\n    fontSize: 18,\n    color: \"lightblue\"\n  },\n  textPassword: {\n    marginLeft: 10,\n    fontSize: 18,\n    color: \"lightblue\"\n  },\n  textInput: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/components/Register.js"],"names":["React","useEffect","useDispatch","useSelector","Icon","Button","Input","Spinner","registerUser","windowHeight","Dimensions","get","height","windowWidth","width","Login","navigation","failRegistration","store","register","error","succesfulRegister","succesfull","console","log","useState","email","setEmail","password","setPassword","waiting","setWaiting","errorEmail","setErrorEmail","dispatch","twoButtonsAlert","Alert","alert","text","onPress","cancelable","emailAlert","passwordAlert","checkData","includes","slice","indexOf","length","toLocaleLowerCase","navigate","styles","root","textEmail","type","name","color","value","textInput","textPassword","marginLeft","marginRight","contenedorBotones","button","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginTop","display","flexDirection","marginBottom","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;;;;;;;;AAUA,OAAOC,IAAP;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT;AACA,IAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAA9C;AACA,IAAMC,WAAW,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,KAA7C;AAEA,eAAe,SAASC,KAAT,OAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC5C,MAAMC,gBAAgB,GAAGd,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAN,CAAeC,KAA1B;AAAA,GAAD,CAApC;AACA,MAAMC,iBAAiB,GAAGlB,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAN,CAAeG,UAA1B;AAAA,GAAD,CAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,gBAApB,EAAsC,WAAtC,EAAmDI,iBAAnD;;AAH4C,wBAIlBrB,KAAK,CAACyB,QAAN,CAAe,EAAf,CAJkB;AAAA;AAAA,MAIrCC,KAJqC;AAAA,MAI9BC,QAJ8B;;AAAA,yBAKZ3B,KAAK,CAACyB,QAAN,CAAe,EAAf,CALY;AAAA;AAAA,MAKrCG,QALqC;AAAA,MAK3BC,WAL2B;;AAAA,yBAMd7B,KAAK,CAACyB,QAAN,CAAe,KAAf,CANc;AAAA;AAAA,MAMrCK,OANqC;AAAA,MAM5BC,UAN4B;;AAAA,yBAOR/B,KAAK,CAACyB,QAAN,CAAe,EAAf,CAPQ;AAAA;AAAA,MAOrCO,UAPqC;AAAA,MAOzBC,aAPyB;;AAQ5C,MAAMC,QAAQ,GAAGhC,WAAW,EAA5B;;AACA,MAAMiC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BC,IAAAA,KAAK,CAACC,KAAN,CACE,qBADF,EAEE,8CAFF,EAGE,CAAC;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAA,eAAMhB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,KAAD,CAHF,EAIE;AAAEgB,MAAAA,UAAU,EAAE;AAAd,KAJF;AAMD,GAPD;;AASA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBL,IAAAA,KAAK,CAACC,KAAN,CACE,qBADF,EAEE,iCAFF,EAGE,CAAC;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAA,eAAMhB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,KAAD,CAHF,EAIE;AAAEgB,MAAAA,UAAU,EAAE;AAAd,KAJF;AAMD,GAPD;;AASA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BN,IAAAA,KAAK,CAACC,KAAN,CACE,qBADF,EAEE,oCAFF,EAGE,CAAC;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAA,eAAMhB,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,KAAD,CAHF,EAIE;AAAEgB,MAAAA,UAAU,EAAE;AAAd,KAJF;AAMD,GAPD;;AASA,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBpB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,QAAIE,KAAK,IAAI,EAAT,IAAeE,QAAQ,IAAI,EAA/B,EAAmC;AACjC,aAAOO,eAAe,EAAtB;AACD,KAFD,MAEO,IAAIT,KAAK,IAAI,EAAb,EAAiB;AACtB,aAAOe,UAAU,EAAjB;AACD,KAFM,MAEA,IAAIb,QAAQ,IAAI,EAAhB,EAAoB;AACzB,aAAOc,aAAa,EAApB;AACD,KAFM,MAEA,IACL,CAAChB,KAAK,CAACkB,QAAN,CAAe,GAAf,CAAD,IACA,CAAClB,KAAK,CAACmB,KAAN,CAAYnB,KAAK,CAACoB,OAAN,CAAc,GAAd,CAAZ,EAAgCpB,KAAK,CAACqB,MAAtC,EAA8CH,QAA9C,CAAuD,GAAvD,CAFI,EAGL;AACAX,MAAAA,aAAa,CAAC,oBAAD,CAAb;AACD,KALM,MAKA;AACLA,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,MAAAA,QAAQ,CACN1B,YAAY,CAAC;AAAEkB,QAAAA,KAAK,EAAEA,KAAK,CAACsB,iBAAN,EAAT;AAAoCpB,QAAAA,QAAQ,EAAEA;AAA9C,OAAD,CADN,CAAR;AAGD;AACF,GApBD;;AAsBA3B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgB,gBAAgB,IAAI,WAAxB,EAAqC;AACnCc,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,aAAa,CAAC,sBAAD,CAAb;AACD;;AACD,QAAIZ,iBAAJ,EAAuB;AACrBE,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAO,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAf,MAAAA,UAAU,CAACiC,QAAX,CAAoB,OAApB;AACD;AACF,GAVQ,EAUN,CAAC5B,iBAAD,EAAoBJ,gBAApB,CAVM,CAAT;AAYA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,OAAO,GACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADM,GAKN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB,MAAM,CAACxB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,KAAD;AACE,IAAA,oBAAoB,EAAE,MADxB;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,cADE;AAERC,MAAAA,IAAI,EAAE,UAFE;AAGRC,MAAAA,KAAK,EAAE;AAHC,KAHZ;AAQE,IAAA,KAAK,EAAEL,MART;AASE,IAAA,YAAY,EAAE,sBAACM,KAAD;AAAA,aAAW7B,QAAQ,CAAC6B,KAAD,CAAnB;AAAA,KAThB;AAUE,IAAA,UAAU,EAAEN,MAAM,CAACO,SAVrB;AAWE,IAAA,YAAY,EAAEzB,UAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAiBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkB,MAAM,CAACtB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEsB,MAAM,CAACQ,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,KAAD;AACE,IAAA,oBAAoB,EAAE,MADxB;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAE,CADJ;AAERN,MAAAA,IAAI,EAAE,cAFE;AAGRC,MAAAA,IAAI,EAAE,MAHE;AAIRC,MAAAA,KAAK,EAAE,OAJC;AAKRK,MAAAA,WAAW,EAAE;AALL,KAHZ;AAUE,IAAA,UAAU,EAAEV,MAAM,CAACO,SAVrB;AAWE,IAAA,YAAY,EAAE,sBAACD,KAAD;AAAA,aAAW3B,WAAW,CAAC2B,KAAD,CAAtB;AAAA,KAXhB;AAYE,IAAA,eAAe,EAAE,IAZnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,EAkCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACW,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,WAAW,EAAEX,MAAM,CAACY,MAFtB;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbnB,MAAAA,SAAS;AACV,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlCF,CANJ,CADF;AAsDD;AAED,IAAMO,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,IAAI,EAAE;AACJc,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,eAAe,EAAE;AAJb,GADyB;AAO/BP,EAAAA,iBAAiB,EAAE;AACjBQ,IAAAA,SAAS,EAAE,EADM;AAEjBvD,IAAAA,KAAK,EAAED,WAAW,GAAG,GAFJ;AAGjByD,IAAAA,OAAO,EAAE,MAHQ;AAIjBC,IAAAA,aAAa,EAAE,KAJE;AAKjBL,IAAAA,cAAc,EAAE,eALC;AAMjBC,IAAAA,UAAU,EAAE;AANK,GAPY;AAe/BL,EAAAA,MAAM,EAAE;AACNH,IAAAA,UAAU,EAAE,CADN;AAENC,IAAAA,WAAW,EAAE,CAFP;AAGN9C,IAAAA,KAAK,EAAE,GAHD;AAINF,IAAAA,MAAM,EAAE;AAJF,GAfuB;AAqB/Bc,EAAAA,KAAK,EAAE;AACLZ,IAAAA,KAAK,EAAED,WAAW,GAAG,GADhB;AAEL2D,IAAAA,YAAY,EAAE;AAFT,GArBwB;AAyB/B5C,EAAAA,QAAQ,EAAE;AACRd,IAAAA,KAAK,EAAED,WAAW,GAAG,GADb;AAER2D,IAAAA,YAAY,EAAE;AAFN,GAzBqB;AA6B/BpB,EAAAA,SAAS,EAAE;AACTO,IAAAA,UAAU,EAAE,EADH;AAETc,IAAAA,QAAQ,EAAE,EAFD;AAGTlB,IAAAA,KAAK,EAAE;AAHE,GA7BoB;AAkC/BG,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE,EADA;AAEZc,IAAAA,QAAQ,EAAE,EAFE;AAGZlB,IAAAA,KAAK,EAAE;AAHK,GAlCiB;AAuC/BE,EAAAA,SAAS,EAAE;AACTF,IAAAA,KAAK,EAAE;AADE;AAvCoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ActivityIndicator, Keyboard, Dimensions, Alert } from \"react-native\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ScrollView,\n  SafeAreaView,\n  Image,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { Button } from \"react-native-elements\";\nimport { Input } from \"react-native-elements\";\nimport { Spinner } from \"native-base\";\nimport { registerUser } from \"../redux/actions/register\";\nconst windowHeight = Dimensions.get(\"window\").height;\nconst windowWidth = Dimensions.get(\"window\").width;\n\nexport default function Login({ navigation }) {\n  const failRegistration = useSelector((store) => store.register.error);\n  const succesfulRegister = useSelector((store) => store.register.succesfull);\n  console.log(\"Fail\", failRegistration, \" Success:\", succesfulRegister);\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [waiting, setWaiting] = React.useState(false);\n  const [errorEmail, setErrorEmail] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const twoButtonsAlert = () => {\n    Alert.alert(\n      \"Something is wrong!\",\n      \"Email and password field should be complete!\",\n      [{ text: \"OK\", onPress: () => console.log(\"OK Pressed\") }],\n      { cancelable: false }\n    );\n  };\n\n  const emailAlert = () => {\n    Alert.alert(\n      \"Something is wrong!\",\n      \"Email field should be complete!\",\n      [{ text: \"OK\", onPress: () => console.log(\"OK Pressed\") }],\n      { cancelable: false }\n    );\n  };\n\n  const passwordAlert = () => {\n    Alert.alert(\n      \"Something is wrong!\",\n      \"Password field should be complete!\",\n      [{ text: \"OK\", onPress: () => console.log(\"OK Pressed\") }],\n      { cancelable: false }\n    );\n  };\n\n  const checkData = () => {\n    console.log(\"Entro a checkData\");\n    if (email == \"\" && password == \"\") {\n      return twoButtonsAlert();\n    } else if (email == \"\") {\n      return emailAlert();\n    } else if (password == \"\") {\n      return passwordAlert();\n    } else if (\n      !email.includes(\"@\") ||\n      !email.slice(email.indexOf(\"@\"), email.length).includes(\".\")\n    ) {\n      setErrorEmail(\"Email is not valid\");\n    } else {\n      setErrorEmail(\"\");\n      setWaiting(true);\n      dispatch(\n        registerUser({ email: email.toLocaleLowerCase(), password: password })\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (failRegistration == \"EmailUsed\") {\n      setWaiting(false);\n      setErrorEmail(\"Email already in use\");\n    }\n    if (succesfulRegister) {\n      console.log(\"Entro al if afuera del useEffect2\");\n      setWaiting(false);\n      navigation.navigate(\"Login\");\n    }\n  }, [succesfulRegister, failRegistration]);\n\n  return (\n    <View style={styles.root}>\n      {waiting ? (\n        <View>\n          <Spinner color=\"blue\" />\n        </View>\n      ) : (\n        <View>\n          <View style={styles.email}>\n            <Text style={styles.textEmail}>Email</Text>\n            <Input\n              placeholderTextColor={\"gray\"}\n              placeholder=\"abc@example.com\"\n              leftIcon={{\n                type: \"font-awesome\",\n                name: \"envelope\",\n                color: \"white\",\n              }}\n              style={styles}\n              onChangeText={(value) => setEmail(value)}\n              inputStyle={styles.textInput}\n              errorMessage={errorEmail}\n            />\n          </View>\n          <View style={styles.password}>\n            <Text style={styles.textPassword}>Password</Text>\n            <Input\n              placeholderTextColor={\"gray\"}\n              placeholder=\"Som3th1n!gS3c-re\"\n              leftIcon={{\n                marginLeft: 6,\n                type: \"font-awesome\",\n                name: \"lock\",\n                color: \"white\",\n                marginRight: 4,\n              }}\n              inputStyle={styles.textInput}\n              onChangeText={(value) => setPassword(value)}\n              secureTextEntry={true}\n            />\n          </View>\n          <View style={styles.contenedorBotones}>\n            <Button\n              title=\"Register\"\n              buttonStyle={styles.button}\n              onPress={() => {\n                checkData();\n              }}\n            />\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"black\",\n  },\n  contenedorBotones: {\n    marginTop: 10,\n    width: windowWidth * 0.9,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  button: {\n    marginLeft: 5,\n    marginRight: 5,\n    width: 100,\n    height: 40,\n  },\n  email: {\n    width: windowWidth * 0.9,\n    marginBottom: 10,\n  },\n  password: {\n    width: windowWidth * 0.9,\n    marginBottom: 10,\n  },\n  textEmail: {\n    marginLeft: 10,\n    fontSize: 18,\n    color: \"lightblue\",\n  },\n  textPassword: {\n    marginLeft: 10,\n    fontSize: 18,\n    color: \"lightblue\",\n  },\n  textInput: {\n    color: \"white\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}