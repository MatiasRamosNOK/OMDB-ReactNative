{"ast":null,"code":"import axios from \"axios\";\nimport { LOG_USER, LOGOUT, ADD_MOVIE_FAVORITE, REMOVE_MOVIE, RESET_SUCCESFULL } from \"../constants\";\nimport { setSuccesfullNull } from \"./register\";\n\nvar login = function login(data, succesfull) {\n  return {\n    type: LOG_USER,\n    data: data,\n    succesfull: succesfull\n  };\n};\n\nvar logout = function logout() {\n  return {\n    type: LOGOUT\n  };\n};\n\nvar setSuccesfullNullLogin = function setSuccesfullNullLogin() {\n  return {\n    type: RESET_SUCCESFULL\n  };\n};\n\nvar deleteData = function deleteData(data) {\n  return {\n    type: REMOVE_MOVIE,\n    data: data\n  };\n};\n\nvar addToFavorite = function addToFavorite(data) {\n  return {\n    type: ADD_MOVIE_FAVORITE,\n    data: data\n  };\n};\n\nexport var addFavorite = function addFavorite(idUser, idMovie) {\n  console.log(\"ID user:\", idUser, \" ID movie:\", idMovie);\n  return function (dispatch) {\n    axios.post(\"https://omdb-reactnative.herokuapp.com/users/\" + idUser + \"/addMovie/\" + idMovie, {}).then(function (response) {\n      console.log(\"REspuesta action favorite:\", response);\n\n      if (response.status == 200) {\n        console.log(\"La data es:\", response.data);\n        dispatch(addToFavorite(response.data));\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var deleteFavorite = function deleteFavorite(idUser, idMovie) {\n  return function (dispatch) {\n    axios.delete(\"https://omdb-reactnative.herokuapp.com/users/\" + idUser + \"/\" + idMovie, {\n      headers: {\n        Authorization: \"something\"\n      },\n      data: {\n        source: \"something\"\n      }\n    }).then(function (resp) {\n      console.log(\"La respuesta es:\", resp);\n      dispatch(deleteData(resp.data));\n    }).catch(function (err) {\n      console.log(\"Err to delete:\", err);\n    });\n  };\n};\nexport var logginUser = function logginUser(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return function (dispatch) {\n    console.log(\"Entro al dispatch con\", email, password);\n    axios.post(\"https://omdb-reactnative.herokuapp.com/users/login\", {\n      email: email,\n      password: password\n    }).then(function (response) {\n      console.log(\"REsponde es:\", response);\n\n      if (response.status == 200) {\n        console.log(\"Data en action creator:\", response.data);\n        dispatch(login(response.data, true));\n      }\n    }).catch(function (error) {\n      console.log(\"Si hay un error:\", error);\n      dispatch(login({\n        moviesID: []\n      }, false));\n    });\n  };\n};\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    dispatch(logout());\n  };\n};\nexport var resetSuccesfull = function resetSuccesfull() {\n  return function (dispatch) {\n    dispatch(setSuccesfullNullLogin());\n  };\n};","map":{"version":3,"sources":["/home/matias/Documentos/ReactNative/OMDB-ReactNativeGIT/redux/actions/login.js"],"names":["axios","LOG_USER","LOGOUT","ADD_MOVIE_FAVORITE","REMOVE_MOVIE","RESET_SUCCESFULL","setSuccesfullNull","login","data","succesfull","type","logout","setSuccesfullNullLogin","deleteData","addToFavorite","addFavorite","idUser","idMovie","console","log","dispatch","post","then","response","status","catch","error","deleteFavorite","delete","headers","Authorization","source","resp","err","logginUser","email","password","moviesID","logoutUser","resetSuccesfull"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  LOG_USER,\n  LOGOUT,\n  ADD_MOVIE_FAVORITE,\n  REMOVE_MOVIE,\n  RESET_SUCCESFULL,\n} from \"../constants\";\nimport { setSuccesfullNull } from \"./register\";\n\nconst login = function (data, succesfull) {\n  return {\n    type: LOG_USER,\n    data: data,\n    succesfull: succesfull,\n  };\n};\n\nconst logout = function () {\n  return {\n    type: LOGOUT,\n  };\n};\n\nconst setSuccesfullNullLogin = function () {\n  return {\n    type: RESET_SUCCESFULL,\n  };\n};\n\nconst deleteData = function (data) {\n  return {\n    type: REMOVE_MOVIE,\n    data: data,\n  };\n};\n\nconst addToFavorite = function (data) {\n  return {\n    type: ADD_MOVIE_FAVORITE,\n    data: data,\n  };\n};\nexport const addFavorite = function (idUser, idMovie) {\n  console.log(\"ID user:\", idUser, \" ID movie:\", idMovie);\n  return function (dispatch) {\n    axios\n      .post(\n        `https://omdb-reactnative.herokuapp.com/users/${idUser}/addMovie/${idMovie}`,\n        {}\n      )\n      .then(function (response) {\n        console.log(\"REspuesta action favorite:\", response);\n        if (response.status == 200) {\n          console.log(\"La data es:\", response.data);\n          dispatch(addToFavorite(response.data));\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n};\n\nexport const deleteFavorite = function (idUser, idMovie) {\n  return function (dispatch) {\n    axios\n      .delete(\n        `https://omdb-reactnative.herokuapp.com/users/${idUser}/${idMovie}`,\n        {\n          headers: {\n            Authorization: \"something\",\n          },\n          data: {\n            source: \"something\",\n          },\n        }\n      )\n      .then((resp) => {\n        console.log(\"La respuesta es:\", resp);\n        dispatch(deleteData(resp.data));\n      })\n      .catch((err) => {\n        console.log(\"Err to delete:\", err);\n      });\n  };\n};\nexport const logginUser = function ({ email, password }) {\n  return function (dispatch) {\n    console.log(\"Entro al dispatch con\", email, password);\n    axios\n      .post(\"https://omdb-reactnative.herokuapp.com/users/login\", {\n        email: email,\n        password: password,\n      })\n      .then(function (response) {\n        console.log(\"REsponde es:\", response);\n        if (response.status == 200) {\n          console.log(\"Data en action creator:\", response.data);\n          dispatch(login(response.data, true));\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Si hay un error:\", error);\n        dispatch(login({ moviesID: [] }, false));\n      });\n  };\n};\n\nexport const logoutUser = function () {\n  return function (dispatch) {\n    dispatch(logout());\n  };\n};\n\nexport const resetSuccesfull = function () {\n  return function (dispatch) {\n    dispatch(setSuccesfullNullLogin());\n  };\n};\n"]},"metadata":{},"sourceType":"module"}